
- name: Ensure the webserver can connect to the database
  wait_for: host="{{webserver_database}}" port=5432 delay=0 timeout=10 state=started

- name: Stage SSL certificates
  file:
    path: "{{app_data}}/ssl"
    state: directory
    mode: 0700
    owner: "{{ansible_user}}"
    recurse: yes
  become: yes
  become_method: sudo
- name: Stage SSL certificates
  copy: src="server.xml"
        dest="{{app_data}}/ssl/server.xml"
  become: yes
  become_method: sudo
- name: Inject password into server.xml
  ansible.builtin.replace:
    path: "{{app_data}}/ssl/server.xml"
    regexp: "keystorePass=\"changeit\""
    replace: "keystorePass=\"{{ssl_keystore_password}}\""
  become: yes
  become_method: sudo
  
  
  
# Move existing geoprism data over to /data/geoprism
- name: Does the new docker volume exist already?
  stat: "path={{app_data}}/geoprism"
  register: new_volume_exists
  become: yes
  become_method: sudo
- name: Does the old docker volume exist?
  stat: "path=/opt/geoprism"
  register: old_volume_exists
  become: yes
  become_method: sudo
- name: Create docker volume directory
  file:
    state: directory
    path: "{{app_data}}/geoprism"
  become: yes
  become_method: sudo
- name: Copy volume to docker volume vault
  shell: "cp -a /opt/geoprism/. {{app_data}}/geoprism/"
  when: "not new_volume_exists.stat.exists and old_volume_exists.stat.exists"
  become: yes
  become_method: sudo

# Delete temp files
- name: Delete Tomcat Temp Files
  shell: "rm -rf {{app_data}}/tomcat/tmp/*"
  become: yes
  become_method: sudo
  
# Start the Geoprism Docker container
- name: Start Tomcat Webserver
  community.general.docker_container:
    name: geoprism
    image: "{{webserver_docker_image}}"
    state: started
    recreate: yes
    pull: yes
    restart_policy: always
    env: >
        JAVA_OPTS="
        -Xms512M
        -Xmx{{tomcat_memory}}
        -Djava.rmi.server.hostname={{ remote_endpoint_ip }}
        -Ddatabase.hostURL={{webserver_database}}
        -server
        -Dappcfg={{catalina_home}}/appcfg
        -Dproject.basedir={{catalina_home}}
        -Dtomcat.home={{catalina_home}}
        -Djavax.net.ssl.keyStore={{catalina_home}}/conf/geoprism.ks
        -Djavax.net.ssl.keyStorePassword={{ssl_keystore_password}}
        -Dbirt-server=true
        -DFile.encoding=UTF-8      
        -Ddatabase.user={{db_user}}
        -Ddatabase.password={{db_pass}}
        -Ddatabase.port=5432
        -Demail.username={{ email_user | default('x') }}
        -Demail.password={{ email_pass | default('x') }}
        -Dbucket.name={{bucket_name | default('x')}}
        -Dsolr.enabled={{solr_enabled | default('false')}}
        -Dgeoprism.volume=/data/geoprism/misc
        -Dorientdb.root.password={{orientdb_root_pass | default('x')}}
        -Dorientdb.admin.password={{orientdb_app_pass | default('x')}}
        -DGEOSERVER_DATA_DIR=/data/geoserver/data
        {{tomcat_java_opts | default('')}}
        "
    network_mode: host
    volumes:
        - "{{app_data}}/geoprism:/data/geoprism"
        - "{{app_data}}/tomcat/logs:/usr/local/tomcat/logs"
        - "{{app_data}}/tomcat/tmp:/usr/local/tomcat/temp"
        - "{{app_data}}/tomcat/webapps/.well-known:/usr/local/tomcat/webapps/.well-known"
        - "{{app_data}}/geoserver:/data/geoserver"
        - "{{app_data}}/ssl/keystore.jks:{{catalina_home}}/conf/geoprism.ks"
        - "{{app_data}}/ssl/server.xml:{{catalina_home}}/conf/server.xml"
  become: yes
  become_method: sudo
  when: "not {{debug | default('false')}}"
  
- name: Start Geoprism Webserver (Debug)
  community.general.docker_container:
    name: geoprism
    image: "{{webserver_docker_image}}"
    state: started
    recreate: yes
    pull: yes
    restart_policy: always
    env: >
        JAVA_OPTS="
        -Xms512M
        -Xmx{{tomcat_memory}}
        -Djava.rmi.server.hostname={{ remote_endpoint_ip }}
        -Ddatabase.hostURL={{webserver_database}}
        -Dappcfg={{catalina_home}}/appcfg
        -Dproject.basedir={{catalina_home}}
        -Dtomcat.home={{catalina_home}}
        -Djavax.net.ssl.keyStore={{catalina_home}}/conf/geoprism.ks
        -Djavax.net.ssl.keyStorePassword={{ssl_keystore_password}}
        -Dbirt-server=true
        -DFile.encoding=UTF-8      
        -Ddatabase.user={{db_user}}
        -Ddatabase.password={{db_pass}}
        -Ddatabase.port=5432
        -Demail.username={{ email_user | default('x') }}
        -Demail.password={{ email_pass | default('x') }}
        -Dbucket.name={{bucket_name | default('x')}}
        -Dsolr.enabled={{solr_enabled | default('false')}}
        -Dgeoprism.volume=/opt/geoprism/misc
        -Dorientdb.root.password={{orientdb_root_pass | default('x')}}
        -Dorientdb.admin.password={{orientdb_app_pass | default('x')}}
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.port=9010
        -Dcom.sun.management.jmxremote.rmi.port=9010
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Xdebug
        -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
        -DGEOSERVER_DATA_DIR=/data/geoserver/data
        {{tomcat_java_opts | default('')}}
        "
        JAVA_OPTS_NO_DEBUG="
        -Xms512M
        -Xmx{{tomcat_memory}}
        -Djava.rmi.server.hostname={{ remote_endpoint_ip }}
        -Ddatabase.hostURL={{webserver_database}}
        -Dappcfg={{catalina_home}}/appcfg
        -Dproject.basedir={{catalina_home}}
        -Dtomcat.home={{catalina_home}}
        -Djavax.net.ssl.keyStore={{catalina_home}}/conf/geoprism.ks
        -Djavax.net.ssl.keyStorePassword={{ssl_keystore_password}}
        -Dbirt-server=true
        -DFile.encoding=UTF-8      
        -Ddatabase.user={{db_user}}
        -Ddatabase.password={{db_pass}}
        -Ddatabase.port=5432
        -Demail.username={{ email_user | default('x') }}
        -Demail.password={{ email_pass | default('x') }}
        -Dbucket.name={{bucket_name | default('x')}}
        -Dsolr.enabled={{solr_enabled | default('false')}}
        -Dgeoprism.volume=/data/geoprism/misc
        -Dorientdb.root.password={{orientdb_root_pass | default('x')}}
        -Dorientdb.admin.password={{orientdb_app_pass | default('x')}}
        -DGEOSERVER_DATA_DIR=/data/geoserver/data
        {{tomcat_java_opts | default('')}}
        "
    network_mode: host
    volumes:
        - "{{app_data}}/geoprism:/data/geoprism"
        - "{{app_data}}/tomcat/logs:/usr/local/tomcat/logs"
        - "{{app_data}}/tomcat/tmp:/usr/local/tomcat/temp"
        - "{{app_data}}/tomcat/webapps/.well-known:/usr/local/tomcat/webapps/.well-known"
        - "{{app_data}}/geoserver:/data/geoserver"
        - "{{app_data}}/ssl/letsencrypt/cert/live/{{ssl_domain}}/keystore.jks:{{catalina_home}}/conf/geoprism.ks"
        - "{{app_data}}/ssl/server.xml:{{catalina_home}}/conf/server.xml"
  become: yes
  become_method: sudo
  when: "{{debug | default('false')}}"
  
- name: Forward port (iptables)
  shell: "/sbin/iptables -t nat -I PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443 && /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080 && /sbin/service iptables save"
  become: yes
  become_method: sudo
  when: "firewalld is not defined"
- name: Forward port (firewallcmd)
  shell: "firewall-cmd --permanent --add-forward-port=port=443:proto=tcp:toport=8443 && firewall-cmd --permanent --add-forward-port=port=80:proto=tcp:toport=8080 && firewall-cmd --reload"
  become: yes
  become_method: sudo
  when: "firewalld is defined"
  