
##### Fresh Install ####
#
## Aws linux 2 ##
# These steps were done manually on the usace-alpha server to facilitate this script working on AWS Linux 2 OS
# 
# Requires that iptables is installed / enabled first
# https://serverfault.com/questions/1020536/save-iptables-firewall-rules-on-amazon-linux-2
#
# Important! I also found that I had to manually open ports 443, 8443, 8080, and 80 on iptables (i'm guessing the defualt iptables config doesn't have the ports open?)
## sudo sh -c "iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT && iptables -I INPUT -p tcp -m tcp --dport 443 -j ACCEPT && iptables -I INPUT -p tcp -m tcp --dport 8080 -j ACCEPT && iptables -I INPUT -p tcp -m tcp --dport 8443 -j ACCEPT && service iptables save"
## sudo sh -c "iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080 && service iptables save"
#
# The pip install docker-py command failed for me. I had to add the --ignore-installed command
# https://stackoverflow.com/questions/53807511/pip-cannot-uninstall-package-it-is-a-distutils-installed-project
#########################


# Stop Docker Service
# You would think 'yum update' would be smart enough to stop before updating but... https://github.com/moby/moby/issues/33688
- name: Stop Docker service
  service: name=docker state=stopped enabled=yes
  become: yes
  become_method: sudo
  ignore_errors: yes

# Install software. I tried to make this into a list (for readability) but because ordering is important I don't think we can do that.
- name: Yum update
  yum: name="*" state=latest
  become: yes
  become_method: sudo
  
- name: Yum install epel-release # This package is only required for aws linux 1 but not aws linux 2 thus we are ignoring errors.
  yum: name="epel-release" state=latest
  become: yes
  become_method: sudo
  ignore_errors: yes
- name: Yum install ntp
  yum: name="ntp" state=latest
  become: yes
  become_method: sudo
  ignore_errors: yes
- name: Install required packages
  yum:
    name:
      - rsync
      - docker
      - python-pip
    state: latest
  become: yes
  become_method: sudo
  
- name: Yum install firewalld
  yum: name="firewalld" state=latest
  become: yes
  become_method: sudo
  when: "firewalld is defined"
- name: Boot firewalld
  shell: systemctl enable firewalld && systemctl start firewalld
  become: yes
  become_method: sudo
  when: "firewalld is defined"

# AWS CLI tools (for pulling docker images from ecs)
- name: Install AWS CLI tools
  shell: pip install awscli
- name: Install Boto (for pulling data from s3)
  shell: pip install boto

# Docker-py
- name: Uninstall docker-py
  command: pip uninstall -y docker-py
  ignore_errors: yes
- name: Install docker-py
  command: pip install docker

# lxml
- name: Uninstall lxml
  command: pip uninstall -y lxml
  ignore_errors: yes
- name: Install lxml
  command: pip install lxml
  ignore_errors: yes

# Ensure valid server time (ecs pull fails if time is wrong)
- name: Update server time
  shell: ntpdate -u ntp.ubuntu.com
  become: yes
  become_method: sudo
  ignore_errors: yes

# Start Docker Service
# You would think this logic is covered from 'yum install docker' but you would be wrong.
- name: Start Docker service
  service: name=docker state=started enabled=yes
  become: yes
  become_method: sudo
  
# Without regular container cleanup, the server will run out of disk space
- name: Docker System Prune (disk clean up)
  shell: docker system prune -a -f
  become: yes
  become_method: sudo
  ignore_errors: yes