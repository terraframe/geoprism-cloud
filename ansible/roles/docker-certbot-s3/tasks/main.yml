
- name: Stop Tomcat
  shell: docker stop geoprism
  become: yes
  become_method: sudo
  ignore_errors: yes


# Certbot won't work on a fresh install without a port forward
# TODO : This iptables command doesn't work out of the box on AL2. 
# You need to install firewalld:
# sudo yum install -y firewalld
# sudo systemctl enable firewalld
# sudo systemctl start firewalld
# verify with # sudo systemctl status firewalld
- name: Forward port (iptables)
  shell: "/sbin/iptables -t nat -I PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443 && /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080 && /sbin/iptables-save > /etc/sysconfig/iptables && systemctl restart iptables"
  become: yes
  become_method: sudo
  when: "firewalld is not defined"
- name: Forward port (firewallcmd)
  shell: "firewall-cmd --permanent --add-forward-port=port=443:proto=tcp:toport=8443 && firewall-cmd --permanent --add-forward-port=port=80:proto=tcp:toport=8080 && firewall-cmd --reload"
  become: yes
  become_method: sudo
  when: "firewalld is defined"



- name: Create directory
  file:
    path: "{{app_data}}/ssl/letsencrypt/hooks"
    state: directory
  become: yes
  become_method: sudo
- name: Create directory
  file:
    path: "{{app_data}}/ssl/letsencrypt/cert"
    state: directory
  become: yes
  become_method: sudo

- name: Stage geoprism-certbot code
  copy:
    src: "../docker/geoprism-certbot/cli.ini"
    dest: "{{app_data}}/ssl/letsencrypt/cert/cli.ini"
  become: yes
  become_method: sudo
  
- name: Stage geoprism-certbot code
  copy:
    src: "error-notify.sh"
    dest: "{{app_data}}/ssl/letsencrypt/hooks/error-notify.sh"
    mode: a+x
  become: yes
  become_method: sudo
- name: Stage geoprism-certbot code
  copy:
    src: "post-hook.sh"
    dest: "{{app_data}}/ssl/letsencrypt/hooks/post-hook.sh"
    mode: a+x
  become: yes
  become_method: sudo
- name: Stage geoprism-certbot code
  copy:
    src: "pre-hook.sh"
    dest: "{{app_data}}/ssl/letsencrypt/hooks/pre-hook.sh"
    mode: a+x
  become: yes
  become_method: sudo
- name: Stage geoprism-certbot code
  copy:
    src: "geoprism-certbot.sh"
    dest: "{{app_data}}/ssl/letsencrypt/geoprism-certbot.sh"
    mode: a+x
  become: yes
  become_method: sudo
- name: Stage geoprism-certbot code
  copy:
    src: "rebuild_symlinks.sh"
    dest: "{{app_data}}/ssl/letsencrypt/rebuild_symlinks.sh"
    mode: a+x
  become: yes
  become_method: sudo

- name: Start Geoprism Certbot Program
  community.general.docker_container:
    name: geoprism-certbot
    image: docker:19
    state: started
    recreate: yes
    pull: yes
    restart_policy: always
    entrypoint: /bin/sh
    network_mode: host
    command: "/var/lib/geoprism-certbot/geoprism-certbot.sh {{ssl_domain}} {{ssl_admin_email}} {{ssl_keystore_password}} geoprism {{ssl_archive_s3_bucket}} {{ssl_archive_s3_key}} {{ssl_archive_s3_secret}} {{app_data}}/ssl/letsencrypt"
    volumes:
        - "{{app_data}}/tomcat/webapps/.well-known:/data/tomcat/webapps/.well-known"
        - "{{app_data}}/ssl/letsencrypt/cert:/etc/letsencrypt"
        - "{{app_data}}/ssl/letsencrypt/lib:/var/lib/letsencrypt"
        - "{{app_data}}/ssl/letsencrypt/log:/var/log/letsencrypt"
        - "{{app_data}}/ssl/letsencrypt/hooks:/var/lib/geoprism-certbot/hooks"
        - "{{app_data}}/ssl/letsencrypt/geoprism-certbot.sh:/var/lib/geoprism-certbot/geoprism-certbot.sh"
        - "{{app_data}}/ssl/letsencrypt/rebuild_symlinks.sh:/var/lib/geoprism-certbot/rebuild_symlinks.sh"
        - "/var/run:/var/run/parent"
    environment:
	  SERVICE_NAME: "geoprism-certbot"
	  ALERT_TO: "devops@terraframe.com"
	  ALERT_FROM: "noreply@geoprism.net"
	  SES_REGION: "us-west-2"
	  SES_USER: "{{email_user}}"
	  SES_PASS: "{{email_pass}}"
  become: yes
  become_method: sudo
  
- name: Wait until our program has deleted the file
  wait_for:
    path: "{{app_data}}/ssl/letsencrypt/cert/live/{{ssl_domain}}/keystore.jks"
    state: "absent"
  become: yes
  become_method: sudo
- name: Wait until the certificate is present before continuing (otherwise docker will create this file as a directory when the webserver spins up)
  wait_for:
    path: "{{app_data}}/ssl/letsencrypt/cert/live/{{ssl_domain}}/keystore.jks"
  become: yes
  become_method: sudo

- name: Delete any existing file or link
  file:
    path: "{{app_data}}/ssl/keystore.jks"
    state: absent
  become: yes
  become_method: sudo
  
- name: Symbolic link our certificate
  file:
    src: "{{app_data}}/ssl/letsencrypt/cert/live/{{ssl_domain}}/keystore.jks"
    path: "{{app_data}}/ssl/keystore.jks"
    state: link
  become: yes
  become_method: sudo
  
- name: Sleep for 10 seconds because our program will start tomcat (and it breaks stuff in later stages if we don't)
  ansible.builtin.wait_for:
    timeout: 10
  delegate_to: localhost
  
- name: Start Tomcat
  shell: docker start geoprism
  become: yes
  become_method: sudo
  ignore_errors: yes