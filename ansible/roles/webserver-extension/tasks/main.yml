
# This is used to deploy an extension project of Geoprism
  
- name: Stage appcfg
  copy: src="{{appcfg}}/"
        dest="/tmp/staging/appcfg/"
  become: yes
  become_method: sudo
  when: appcfg is defined
- name: Deploy appcfg to Docker
  shell: "{{item}}"
  with_items:
    - docker exec geoprism bash -c 'rm -f $CATALINA_HOME/appcfg'
    - docker cp /tmp/staging/appcfg/ geoprism:"{{catalina_home}}/appcfg"
  become: yes
  become_method: sudo
  when: appcfg is defined
  
- name: Make Wars directory
  shell: "docker exec geoprism bash -c 'mkdir -p $CATALINA_HOME/wars'"
  become: yes
  become_method: sudo

- name: Download Artifact (public)
  shell: docker exec geoprism bash -c 'wget -nv -O $CATALINA_HOME/wars/geoprism.war "http://nexus.terraframe.com/service/local/artifact/maven/redirect?r=allrepos&g={{artifact_groupId}}&a={{artifact_id}}&p=war&v={{artifact_version}}"'
  become: yes
  become_method: sudo
  when: nexus_password is not defined

- name: Download Artifact (private)
  shell: docker exec geoprism bash -c 'wget --user={{nexus_user}} --password={{nexus_password}} -nv -O $CATALINA_HOME/wars/geoprism.war "http://nexus.terraframe.com/service/local/artifact/maven/redirect?r=private&g={{artifact_groupId}}&a={{artifact_id}}&p=war&v={{artifact_version}}"'
  become: yes
  become_method: sudo
  when: nexus_password is defined
  
- name: Extract Artifact
  shell: docker exec geoprism bash -c 'mkdir -p $CATALINA_HOME/wars/geoprism && cd $CATALINA_HOME/wars/geoprism && $JAVA_HOME/bin/jar xf $CATALINA_HOME/wars/geoprism.war'
  become: yes
  become_method: sudo


## Configure log4j2.xml ##
- name: Make webapp-replace directory
  shell: "mkdir -p /tmp/staging/webapp-replace"
  become: yes
  become_method: sudo
- name: Stage log4j2.xml
  copy: src="log4j2.xml"
        dest="/tmp/staging/webapp-replace/log4j2.xml"
  become: yes
  become_method: sudo
- name: Deploy log4j2.xml to Docker
  shell: "{{item}}"
  with_items:
    - sed -i -e 's/<Root level="error">/<Root level="{{log_level | default("error")}}">/g' /tmp/staging/webapp-replace/log4j2.xml
    - docker exec geoprism bash -c 'rm -f $CATALINA_HOME/wars/geoprism/WEB-INF/classes/log4j2.xml'
    - docker cp /tmp/staging/webapp-replace/log4j2.xml geoprism:"{{catalina_home}}/wars/geoprism/WEB-INF/classes/log4j2.xml"
  become: yes
  become_method: sudo
  
  
- name: Download & deploy geoserver
  shell: "{{item}}"
  with_items:
    - docker exec geoprism bash -c 'wget -nv -O $CATALINA_HOME/wars/geoserver.war "http://nexus.terraframe.com/service/local/repositories/allrepos/content/org/geoserver/geoserver/{{geoserver_version}}/geoserver-{{geoserver_version}}.war"'
    - docker exec geoprism bash -c 'mkdir -p $CATALINA_HOME/webapps/geoserver && cd $CATALINA_HOME/webapps/geoserver && $JAVA_HOME/bin/jar xf $CATALINA_HOME/wars/geoserver.war'
  become: yes
  become_method: sudo

- name: Does the geoserver data directory exist already?
  stat: "path={{app_data}}/geoserver/gwc"
  register: geoserver_data_exists
  become: yes
  become_method: sudo
- name: Create geoserver data directory
  file:
    state: directory
    path: "{{app_data}}/geoserver"
  become: yes
  become_method: sudo
- name: Copy default geoserver data to geoserver data directory
  shell: 'docker cp "geoprism:{{catalina_home}}/webapps/geoserver/data" {{app_data}}/geoserver'
  when: "not volume_exists.stat.exists"
  become: yes
  become_method: sudo
  when: "not geoserver_data_exists.stat.exists"

- name: Deploy Artifact
  shell: docker exec geoprism bash -c 'mv $CATALINA_HOME/wars/geoprism $CATALINA_HOME/webapps/ROOT'
  become: yes
  become_method: sudo
